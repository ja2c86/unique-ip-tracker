services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics (will be replicated in both cluster brokers)'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic ip_tracker_topic --replication-factor 1 --partitions 10

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: unique_ip_tracker
    ports:
      - 27017:27017

  unique-ip-tracker-1:
    container_name: tracker-1
    image: unique-ip-tracker
    restart: always
    depends_on:
      - mongo
      - init-kafka
    ports:
      - 8080:8080

  unique-ip-tracker-2:
    container_name: tracker-2
    image: unique-ip-tracker
    restart: always
    depends_on:
      - mongo
      - init-kafka
    ports:
      - 8081:8080

  unique-ip-tracker-3:
    container_name: tracker-3
    image: unique-ip-tracker
    restart: always
    depends_on:
      - mongo
      - init-kafka
    ports:
      - 8082:8080
